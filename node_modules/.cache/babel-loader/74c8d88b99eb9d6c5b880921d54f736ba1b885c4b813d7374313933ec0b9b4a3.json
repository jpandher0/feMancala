{"ast":null,"code":"var _jsxFileName = \"/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MancalaBoard() {\n  _s();\n  const [computerPits, setComputerPits] = useState([4, 4, 4, 4, 4, 4]);\n  const [humanPits, setHumanPits] = useState([4, 4, 4, 4, 4, 4]);\n  const [computerStore, setComputerStore] = useState([0]);\n  const [humanStore, setHumanStore] = useState([0]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [isComputersTurn, setIsComputersTurn] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [earnedFreeMove, setEarnedFreeMove] = useState(false);\n  const [capturedStones, setCapturedStones] = useState(false);\n  const [isWinner, setIsWinner] = useState(false);\n  const {\n    search\n  } = useLocation();\n  const params = new URLSearchParams(search);\n  const name = params.get(\"name\");\n  const computerPlayer = params.get(\"computerPlayer\");\n  const isWin = true;\n  const WinLoss = isWin => {\n    navigate(`/WinLoss`, {\n      state: {\n        isWin\n      }\n    }); //fix to adjust isWin\n  };\n  useEffect(() => {\n    if (currentPlayer === 1) {\n      setIsComputersTurn(true);\n      setTimeout(() => {\n        makeComputerMove();\n      }, 1000); // Adjust the timeout as needed\n    }\n  }, [currentPlayer]); // Trigger this effect whenever currentPlayer changes\n\n  //   useEffect(() => {\n  //     if (gameOver === true) {\n  //       WinLoss;\n  //     }\n  //   });\n\n  useEffect(() => {\n    if (earnedFreeMove) {\n      console.log(\"earned free move\");\n    }\n  }, [earnedFreeMove]);\n  useEffect(() => {\n    if (is_game_over) {\n      console.log(\"isgameover\");\n    }\n  }, [is_game_over]);\n  const makeComputerMove = () => {\n    // Implement logic to make a move for the computer player\n    // For example, you can choose a random pit index\n    //different indexes for ai and default\n    if (computerPlayer === \"AI\") {\n      index = 100;\n    } else {\n      index = 10;\n    }\n    makeMove(index);\n    setIsComputersTurn(false);\n  };\n\n  //pass board into this as well\n  const makeMove = pitIndex => {\n    const moveData = {\n      player_num: currentPlayer,\n      start_index: pitIndex,\n      board: [computerPits, computerStore, humanPits, humanStore]\n    };\n    axios.post(\"http://localhost:8000/make_move\", moveData).then(response => {\n      const {\n        board,\n        earned_free_move,\n        is_game_over\n      } = response.data;\n      setComputerPits(board[0]);\n      setHumanPits(board[2]);\n      setComputerStore(board[1]);\n      setHumanStore(board[3]);\n      setEarnedFreeMove(earnedFreeMove);\n      setGameOver(is_game_over);\n      if (earned_free_move) {\n        console.log(\"Earned free move!\");\n      } else {\n        setCurrentPlayer(1 - currentPlayer);\n      }\n    }).catch(error => console.error(\"Error making move:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to Our Mancala Game, \", name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mancala-board\",\n      children: [isComputersTurn && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Computer's Turn...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pits-row\",\n        children: computerPits && computerPits.reverse().map((stones, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pit\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stones\",\n            children: stones\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)\n        }, 5 - index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stores-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"store-left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"store-value\",\n            children: computerStore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"store-right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"store-value\",\n            children: humanStore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pits-row\",\n        children: humanPits && humanPits.map((stones, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pit\",\n          onClick: () => makeMove(index + 1),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stones\",\n            children: stones\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(MancalaBoard, \"213B0+HdXH5z0MMJjhflqjXCGK4=\", false, function () {\n  return [useLocation];\n});\n_c = MancalaBoard;\nexport default MancalaBoard;\nvar _c;\n$RefreshReg$(_c, \"MancalaBoard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","jsxDEV","_jsxDEV","MancalaBoard","_s","computerPits","setComputerPits","humanPits","setHumanPits","computerStore","setComputerStore","humanStore","setHumanStore","currentPlayer","setCurrentPlayer","isComputersTurn","setIsComputersTurn","gameOver","setGameOver","earnedFreeMove","setEarnedFreeMove","capturedStones","setCapturedStones","isWinner","setIsWinner","search","params","URLSearchParams","name","get","computerPlayer","isWin","WinLoss","navigate","state","setTimeout","makeComputerMove","console","log","is_game_over","index","makeMove","pitIndex","moveData","player_num","start_index","board","post","then","response","earned_free_move","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","reverse","map","stones","onClick","_c","$RefreshReg$"],"sources":["/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction MancalaBoard() {\n  const [computerPits, setComputerPits] = useState([4, 4, 4, 4, 4, 4]);\n  const [humanPits, setHumanPits] = useState([4, 4, 4, 4, 4, 4]);\n  const [computerStore, setComputerStore] = useState([0]);\n  const [humanStore, setHumanStore] = useState([0]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [isComputersTurn, setIsComputersTurn] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [earnedFreeMove, setEarnedFreeMove] = useState(false);\n  const [capturedStones, setCapturedStones] = useState(false);\n  const [isWinner, setIsWinner] = useState(false);\n  const { search } = useLocation();\n  const params = new URLSearchParams(search);\n  const name = params.get(\"name\");\n  const computerPlayer = params.get(\"computerPlayer\");\n  const isWin = true;\n\n  const WinLoss = (isWin) => {\n    navigate(`/WinLoss`, { state: { isWin } }); //fix to adjust isWin\n  };\n\n  useEffect(() => {\n    if (currentPlayer === 1) {\n      setIsComputersTurn(true);\n      setTimeout(() => {\n        makeComputerMove();\n      }, 1000); // Adjust the timeout as needed\n    }\n  }, [currentPlayer]); // Trigger this effect whenever currentPlayer changes\n\n  //   useEffect(() => {\n  //     if (gameOver === true) {\n  //       WinLoss;\n  //     }\n  //   });\n\n  useEffect(() => {\n    if (earnedFreeMove) {\n      console.log(\"earned free move\");\n    }\n  }, [earnedFreeMove]);\n\n  useEffect(() => {\n    if (is_game_over) {\n      console.log(\"isgameover\");\n    }\n  }, [is_game_over]);\n\n  const makeComputerMove = () => {\n    // Implement logic to make a move for the computer player\n    // For example, you can choose a random pit index\n    //different indexes for ai and default\n    if (computerPlayer === \"AI\") {\n      index = 100;\n    } else {\n      index = 10;\n    }\n    makeMove(index);\n    setIsComputersTurn(false);\n  };\n\n  //pass board into this as well\n  const makeMove = (pitIndex) => {\n    const moveData = {\n      player_num: currentPlayer,\n      start_index: pitIndex,\n      board: [computerPits, computerStore, humanPits, humanStore],\n    };\n\n    axios\n      .post(\"http://localhost:8000/make_move\", moveData)\n      .then((response) => {\n        const { board, earned_free_move, is_game_over } = response.data;\n        setComputerPits(board[0]);\n        setHumanPits(board[2]);\n        setComputerStore(board[1]);\n        setHumanStore(board[3]);\n        setEarnedFreeMove(earnedFreeMove);\n        setGameOver(is_game_over);\n        if (earned_free_move) {\n          console.log(\"Earned free move!\");\n        } else {\n          setCurrentPlayer(1 - currentPlayer);\n        }\n      })\n      .catch((error) => console.error(\"Error making move:\", error));\n  };\n\n  return (\n    <div>\n      <br></br>\n      <h1>Welcome to Our Mancala Game, {name}!</h1>\n      <br></br>\n      <br></br>\n      <div className=\"mancala-board\">\n        {isComputersTurn && <div>Computer's Turn...</div>}{\" \"}\n        {/* Display text indicating the computer's turn */}\n        <div className=\"pits-row\">\n          {computerPits &&\n            computerPits.reverse().map((stones, index) => (\n              <div\n                className=\"pit\"\n                key={5 - index}\n                //onClick={() => play(index + 6)} ignore this\n              >\n                <div className=\"stones\">{stones}</div>\n              </div>\n            ))}\n        </div>\n        <div className=\"stores-row\">\n          <div className=\"store-left\">\n            <div className=\"store-value\">{computerStore}</div>\n          </div>\n          <div className=\"store-right\">\n            <div className=\"store-value\">{humanStore}</div>\n          </div>\n        </div>\n        <div className=\"pits-row\">\n          {humanPits &&\n            humanPits.map((stones, index) => (\n              <button\n                className=\"pit\"\n                key={index}\n                onClick={() => makeMove(index + 1)}\n              >\n                <div className=\"stones\">{stones}</div>\n              </button>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MancalaBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACpE,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM;IAAE4B;EAAO,CAAC,GAAG1B,WAAW,CAAC,CAAC;EAChC,MAAM2B,MAAM,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC;EAC1C,MAAMG,IAAI,GAAGF,MAAM,CAACG,GAAG,CAAC,MAAM,CAAC;EAC/B,MAAMC,cAAc,GAAGJ,MAAM,CAACG,GAAG,CAAC,gBAAgB,CAAC;EACnD,MAAME,KAAK,GAAG,IAAI;EAElB,MAAMC,OAAO,GAAID,KAAK,IAAK;IACzBE,QAAQ,CAAE,UAAS,EAAE;MAAEC,KAAK,EAAE;QAAEH;MAAM;IAAE,CAAC,CAAC,CAAC,CAAC;EAC9C,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACd,IAAIe,aAAa,KAAK,CAAC,EAAE;MACvBG,kBAAkB,CAAC,IAAI,CAAC;MACxBmB,UAAU,CAAC,MAAM;QACfC,gBAAgB,CAAC,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACvB,aAAa,CAAC,CAAC,CAAC,CAAC;;EAErB;EACA;EACA;EACA;EACA;;EAEAf,SAAS,CAAC,MAAM;IACd,IAAIqB,cAAc,EAAE;MAClBkB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC;EACF,CAAC,EAAE,CAACnB,cAAc,CAAC,CAAC;EAEpBrB,SAAS,CAAC,MAAM;IACd,IAAIyC,YAAY,EAAE;MAChBF,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3B;EACF,CAAC,EAAE,CAACC,YAAY,CAAC,CAAC;EAElB,MAAMH,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA;IACA;IACA,IAAIN,cAAc,KAAK,IAAI,EAAE;MAC3BU,KAAK,GAAG,GAAG;IACb,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;IACAC,QAAQ,CAACD,KAAK,CAAC;IACfxB,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMyB,QAAQ,GAAIC,QAAQ,IAAK;IAC7B,MAAMC,QAAQ,GAAG;MACfC,UAAU,EAAE/B,aAAa;MACzBgC,WAAW,EAAEH,QAAQ;MACrBI,KAAK,EAAE,CAACzC,YAAY,EAAEI,aAAa,EAAEF,SAAS,EAAEI,UAAU;IAC5D,CAAC;IAEDX,KAAK,CACF+C,IAAI,CAAC,iCAAiC,EAAEJ,QAAQ,CAAC,CACjDK,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAAEH,KAAK;QAAEI,gBAAgB;QAAEX;MAAa,CAAC,GAAGU,QAAQ,CAACE,IAAI;MAC/D7C,eAAe,CAACwC,KAAK,CAAC,CAAC,CAAC,CAAC;MACzBtC,YAAY,CAACsC,KAAK,CAAC,CAAC,CAAC,CAAC;MACtBpC,gBAAgB,CAACoC,KAAK,CAAC,CAAC,CAAC,CAAC;MAC1BlC,aAAa,CAACkC,KAAK,CAAC,CAAC,CAAC,CAAC;MACvB1B,iBAAiB,CAACD,cAAc,CAAC;MACjCD,WAAW,CAACqB,YAAY,CAAC;MACzB,IAAIW,gBAAgB,EAAE;QACpBb,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAClC,CAAC,MAAM;QACLxB,gBAAgB,CAAC,CAAC,GAAGD,aAAa,CAAC;MACrC;IACF,CAAC,CAAC,CACDuC,KAAK,CAAEC,KAAK,IAAKhB,OAAO,CAACgB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC;EAED,oBACEnD,OAAA;IAAAoD,QAAA,gBACEpD,OAAA;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTxD,OAAA;MAAAoD,QAAA,GAAI,+BAA6B,EAAC1B,IAAI,EAAC,GAAC;IAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CxD,OAAA;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTxD,OAAA;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTxD,OAAA;MAAKyD,SAAS,EAAC,eAAe;MAAAL,QAAA,GAC3BvC,eAAe,iBAAIb,OAAA;QAAAoD,QAAA,EAAK;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAAE,GAAG,eAEtDxD,OAAA;QAAKyD,SAAS,EAAC,UAAU;QAAAL,QAAA,EACtBjD,YAAY,IACXA,YAAY,CAACuD,OAAO,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEtB,KAAK,kBACvCtC,OAAA;UACEyD,SAAS,EAAC,KAAK;UAAAL,QAAA,eAIfpD,OAAA;YAAKyD,SAAS,EAAC,QAAQ;YAAAL,QAAA,EAAEQ;UAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC,GAHjC,CAAC,GAAGlB,KAAK;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNxD,OAAA;QAAKyD,SAAS,EAAC,YAAY;QAAAL,QAAA,gBACzBpD,OAAA;UAAKyD,SAAS,EAAC,YAAY;UAAAL,QAAA,eACzBpD,OAAA;YAAKyD,SAAS,EAAC,aAAa;YAAAL,QAAA,EAAE7C;UAAa;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,eACNxD,OAAA;UAAKyD,SAAS,EAAC,aAAa;UAAAL,QAAA,eAC1BpD,OAAA;YAAKyD,SAAS,EAAC,aAAa;YAAAL,QAAA,EAAE3C;UAAU;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNxD,OAAA;QAAKyD,SAAS,EAAC,UAAU;QAAAL,QAAA,EACtB/C,SAAS,IACRA,SAAS,CAACsD,GAAG,CAAC,CAACC,MAAM,EAAEtB,KAAK,kBAC1BtC,OAAA;UACEyD,SAAS,EAAC,KAAK;UAEfI,OAAO,EAAEA,CAAA,KAAMtB,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;UAAAc,QAAA,eAEnCpD,OAAA;YAAKyD,SAAS,EAAC,QAAQ;YAAAL,QAAA,EAAEQ;UAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC,GAHjClB,KAAK;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIJ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtD,EAAA,CApIQD,YAAY;EAAA,QAWAJ,WAAW;AAAA;AAAAiE,EAAA,GAXvB7D,YAAY;AAsIrB,eAAeA,YAAY;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}