{"ast":null,"code":"var _jsxFileName = \"/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MancalaBoard() {\n  _s();\n  const [pits, setPits] = useState([]);\n  const [stores, setStores] = useState([0, 0]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const {\n    search\n  } = useLocation();\n  const params = new URLSearchParams(search);\n  const name = params.get(\"name\");\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/get_board\").then(response => {\n      const {\n        board\n      } = response.data;\n      // Split the board into player pits and stores\n      const playerPits = [board.slice(0, 6), board.slice(7, 13)]; // Adjusted slicing indices\n      const playerStores = [board[6], board[13]]; // Adjusted slicing indices\n      setPits(playerPits);\n      setStores(playerStores);\n    }).catch(error => console.error(\"Error fetching board data:\", error));\n  }, []);\n  const makeMove = pitIndex => {\n    const moveData = {\n      player_num: currentPlayer + 1,\n      start_index: pitIndex\n    };\n    axios.post(\"http://localhost:8000/make_move\", moveData).then(response => {\n      const {\n        board,\n        earned_free_move\n      } = response.data;\n      setPits(board.slice(0, 2));\n      setStores(board.slice(2));\n      if (earned_free_move) {\n        console.log(\"Earned free move!\");\n      } else {\n        setCurrentPlayer(1 - currentPlayer);\n      }\n    }).catch(error => console.error(\"Error making move:\", error));\n  };\n  const play = pitIndex => {\n    let stones = pits[pitIndex];\n    if (stones === 0 || currentPlayer !== Math.floor(pitIndex / 6)) return;\n    const newPits = [...pits];\n    newPits[pitIndex] = 0;\n    let currentIndex = pitIndex;\n    while (stones > 0) {\n      currentIndex = (currentIndex + 1) % 12;\n      newPits[currentIndex]++;\n      stones--;\n    }\n    if (newPits[currentIndex] === 1 && Math.floor(currentIndex / 6) === currentPlayer) {\n      const oppositeIndex = 11 - currentIndex;\n      const captured = newPits[oppositeIndex];\n      newPits[oppositeIndex] = 0;\n      const newStores = [...stores];\n      newStores[currentPlayer] += captured + 1;\n      newPits[currentIndex] = 0;\n      setStores(newStores);\n    }\n    setPits(newPits);\n    setCurrentPlayer(1 - currentPlayer);\n    makeMove(pitIndex); // Make API call after local move\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to Our Mancala Game, \", name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pits\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"store\",\n          children: stores[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), pits.slice(6).map((stones, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stones\",\n          onClick: () => play(index + 6),\n          children: stones\n        }, index + 6, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"store\",\n          children: stores[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pits\",\n        children: pits.slice(0, 6).reverse().map((stones, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stones\",\n          onClick: () => play(5 - index),\n          children: stones\n        }, 5 - index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Score: \", stores[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Computer Score: \", stores[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n  //   return (\n  //     <div>\n  //       <h1>Welcome to Our Mancala Game, {name}!</h1>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           <div className=\"store\">{stores[1]}</div>\n  //           {pits[1] &&\n  //             pits[1].map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={index + 6}\n  //                 onClick={() => play(index + 6)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //           <div className=\"store\">{stores[0]}</div>\n  //         </div>\n  //       </div>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {pits[0] &&\n  //             pits[0].reverse().map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={5 - index}\n  //                 onClick={() => play(5 - index)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //         </div>\n  //       </div>\n  //       <h3>Your Score: {stores[1]}</h3>\n  //       <h3>Computer Score: {stores[0]}</h3>\n  //     </div>\n  //   );\n}\n_s(MancalaBoard, \"mwCPMiC/E9S1xZAVyDYx9n78N8Q=\", false, function () {\n  return [useLocation];\n});\n_c = MancalaBoard;\nexport default MancalaBoard;\nvar _c;\n$RefreshReg$(_c, \"MancalaBoard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","jsxDEV","_jsxDEV","MancalaBoard","_s","pits","setPits","stores","setStores","currentPlayer","setCurrentPlayer","search","params","URLSearchParams","name","get","then","response","board","data","playerPits","slice","playerStores","catch","error","console","makeMove","pitIndex","moveData","player_num","start_index","post","earned_free_move","log","play","stones","Math","floor","newPits","currentIndex","oppositeIndex","captured","newStores","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","onClick","reverse","_c","$RefreshReg$"],"sources":["/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction MancalaBoard() {\n  const [pits, setPits] = useState([]);\n  const [stores, setStores] = useState([0, 0]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const { search } = useLocation();\n  const params = new URLSearchParams(search);\n  const name = params.get(\"name\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/get_board\")\n      .then((response) => {\n        const { board } = response.data;\n        // Split the board into player pits and stores\n        const playerPits = [board.slice(0, 6), board.slice(7, 13)]; // Adjusted slicing indices\n        const playerStores = [board[6], board[13]]; // Adjusted slicing indices\n        setPits(playerPits);\n        setStores(playerStores);\n      })\n      .catch((error) => console.error(\"Error fetching board data:\", error));\n  }, []);\n\n  const makeMove = (pitIndex) => {\n    const moveData = {\n      player_num: currentPlayer + 1,\n      start_index: pitIndex,\n    };\n\n    axios\n      .post(\"http://localhost:8000/make_move\", moveData)\n      .then((response) => {\n        const { board, earned_free_move } = response.data;\n        setPits(board.slice(0, 2));\n        setStores(board.slice(2));\n        if (earned_free_move) {\n          console.log(\"Earned free move!\");\n        } else {\n          setCurrentPlayer(1 - currentPlayer);\n        }\n      })\n      .catch((error) => console.error(\"Error making move:\", error));\n  };\n\n  const play = (pitIndex) => {\n    let stones = pits[pitIndex];\n    if (stones === 0 || currentPlayer !== Math.floor(pitIndex / 6)) return;\n\n    const newPits = [...pits];\n    newPits[pitIndex] = 0;\n\n    let currentIndex = pitIndex;\n    while (stones > 0) {\n      currentIndex = (currentIndex + 1) % 12;\n      newPits[currentIndex]++;\n      stones--;\n    }\n\n    if (\n      newPits[currentIndex] === 1 &&\n      Math.floor(currentIndex / 6) === currentPlayer\n    ) {\n      const oppositeIndex = 11 - currentIndex;\n      const captured = newPits[oppositeIndex];\n      newPits[oppositeIndex] = 0;\n      const newStores = [...stores];\n      newStores[currentPlayer] += captured + 1;\n      newPits[currentIndex] = 0;\n      setStores(newStores);\n    }\n\n    setPits(newPits);\n    setCurrentPlayer(1 - currentPlayer);\n    makeMove(pitIndex); // Make API call after local move\n  };\n\n  return (\n    <div>\n      <h1>Welcome to Our Mancala Game, {name}!</h1>\n      <div className=\"board\">\n        <div className=\"pits\">\n          <div className=\"store\">{stores[1]}</div>\n          {pits.slice(6).map((stones, index) => (\n            <button\n              className=\"stones\"\n              key={index + 6}\n              onClick={() => play(index + 6)}\n            >\n              {stones}\n            </button>\n          ))}\n          <div className=\"store\">{stores[0]}</div>\n        </div>\n      </div>\n      <div className=\"board\">\n        <div className=\"pits\">\n          {pits\n            .slice(0, 6)\n            .reverse()\n            .map((stones, index) => (\n              <button\n                className=\"stones\"\n                key={5 - index}\n                onClick={() => play(5 - index)}\n              >\n                {stones}\n              </button>\n            ))}\n        </div>\n      </div>\n      <h3>Your Score: {stores[1]}</h3>\n      <h3>Computer Score: {stores[0]}</h3>\n    </div>\n  );\n  //   return (\n  //     <div>\n  //       <h1>Welcome to Our Mancala Game, {name}!</h1>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           <div className=\"store\">{stores[1]}</div>\n  //           {pits[1] &&\n  //             pits[1].map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={index + 6}\n  //                 onClick={() => play(index + 6)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //           <div className=\"store\">{stores[0]}</div>\n  //         </div>\n  //       </div>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {pits[0] &&\n  //             pits[0].reverse().map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={5 - index}\n  //                 onClick={() => play(5 - index)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //         </div>\n  //       </div>\n  //       <h3>Your Score: {stores[1]}</h3>\n  //       <h3>Computer Score: {stores[0]}</h3>\n  //     </div>\n  //   );\n}\n\nexport default MancalaBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}