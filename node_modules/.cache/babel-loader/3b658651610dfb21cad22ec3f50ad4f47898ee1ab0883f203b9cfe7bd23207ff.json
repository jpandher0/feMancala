{"ast":null,"code":"// import React, { useState } from 'react';\n// import './App.css';\n\n// function MancalaBoard() {\n//     // Initialize the game state with 4 stones in each pit\n//     const initialPits = Array(12).fill(4);\n//     const [pits, setPits] = useState(initialPits);\n//     const [stores, setStores] = useState([0, 0]); // Stores for each player\n//     const [currentPlayer, setCurrentPlayer] = useState(0); // 0 for player 1, 1 for player 2\n\n//     const play = (pitIndex) => {\n//         let stones = pits[pitIndex];\n//         if (stones === 0 || currentPlayer !== Math.floor(pitIndex / 6)) return; // Check if pit is empty or not the player's turn\n\n//         // Clear the selected pit\n//         const newPits = [...pits];\n//         newPits[pitIndex] = 0;\n\n//         // Distribute the stones\n//         let currentIndex = pitIndex;\n//         while (stones > 0) {\n//             currentIndex = (currentIndex + 1) % 12;\n//             newPits[currentIndex]++;\n//             stones--;\n//         }\n\n//         // Check for capture\n//         if (newPits[currentIndex] === 1 && Math.floor(currentIndex / 6) === currentPlayer) {\n//             const oppositeIndex = 11 - currentIndex;\n//             const captured = newPits[oppositeIndex];\n//             newPits[oppositeIndex] = 0; // Clear the opposite pit\n//             const newStores = [...stores];\n//             newStores[currentPlayer] += captured + 1;\n//             newPits[currentIndex] = 0; // Clear the landing pit\n//             setStores(newStores);\n//         }\n\n//         setPits(newPits);\n//         setCurrentPlayer(1 - currentPlayer); // Switch turns\n//     };\n\n//     return (\n//         <div className=\"board\">\n//             <div className=\"store\">{stores[1]}</div>\n//             <div className=\"pits\">\n//                 {pits.slice(6).map((stones, index) => (\n//                     <button key={index + 6} onClick={() => play(index + 6)}>{stones}</button>\n//                 ))}\n//                 {pits.slice(0, 6).reverse().map((stones, index) => (\n//                     <button key={5 - index} onClick={() => play(5 - index)}>{stones}</button>\n//                 ))}\n//             </div>\n//             <div className=\"store\">{stores[0]}</div>\n//         </div>\n//     );\n// }\n\n// export default MancalaBoard;","map":{"version":3,"names":[],"sources":["/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './App.css';\n\n// function MancalaBoard() {\n//     // Initialize the game state with 4 stones in each pit\n//     const initialPits = Array(12).fill(4);\n//     const [pits, setPits] = useState(initialPits);\n//     const [stores, setStores] = useState([0, 0]); // Stores for each player\n//     const [currentPlayer, setCurrentPlayer] = useState(0); // 0 for player 1, 1 for player 2\n\n//     const play = (pitIndex) => {\n//         let stones = pits[pitIndex];\n//         if (stones === 0 || currentPlayer !== Math.floor(pitIndex / 6)) return; // Check if pit is empty or not the player's turn\n\n//         // Clear the selected pit\n//         const newPits = [...pits];\n//         newPits[pitIndex] = 0;\n\n//         // Distribute the stones\n//         let currentIndex = pitIndex;\n//         while (stones > 0) {\n//             currentIndex = (currentIndex + 1) % 12;\n//             newPits[currentIndex]++;\n//             stones--;\n//         }\n\n//         // Check for capture\n//         if (newPits[currentIndex] === 1 && Math.floor(currentIndex / 6) === currentPlayer) {\n//             const oppositeIndex = 11 - currentIndex;\n//             const captured = newPits[oppositeIndex];\n//             newPits[oppositeIndex] = 0; // Clear the opposite pit\n//             const newStores = [...stores];\n//             newStores[currentPlayer] += captured + 1;\n//             newPits[currentIndex] = 0; // Clear the landing pit\n//             setStores(newStores);\n//         }\n\n//         setPits(newPits);\n//         setCurrentPlayer(1 - currentPlayer); // Switch turns\n//     };\n\n//     return (\n//         <div className=\"board\">\n//             <div className=\"store\">{stores[1]}</div>\n//             <div className=\"pits\">\n//                 {pits.slice(6).map((stones, index) => (\n//                     <button key={index + 6} onClick={() => play(index + 6)}>{stones}</button>\n//                 ))}\n//                 {pits.slice(0, 6).reverse().map((stones, index) => (\n//                     <button key={5 - index} onClick={() => play(5 - index)}>{stones}</button>\n//                 ))}\n//             </div>\n//             <div className=\"store\">{stores[0]}</div>\n//         </div>\n//     );\n// }\n\n// export default MancalaBoard;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}