{"ast":null,"code":"var _jsxFileName = \"/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MancalaBoard() {\n  _s();\n  const [pits, setPits] = useState([]);\n  const [stores, setStores] = useState([0, 0]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const {\n    search\n  } = useLocation();\n  const params = new URLSearchParams(search);\n  const name = params.get(\"name\");\n  useEffect(() => {\n    axios.get(\"/get_board\").then(response => {\n      const {\n        board\n      } = response.data;\n      setPits(board.slice(0, 2));\n      setStores(board.slice(2));\n    }).catch(error => console.error(\"Error fetching board data:\", error));\n  }, []);\n  const makeMove = pitIndex => {\n    const moveData = {\n      player_num: currentPlayer + 1,\n      start_index: pitIndex\n    };\n    axios.post(\"/make_move\", moveData).then(response => {\n      const {\n        message\n      } = response.data;\n      console.log(message);\n      // Update the board after making the move\n      axios.get(\"/get_board\").then(response => {\n        const {\n          board\n        } = response.data;\n        setPits(board.slice(0, 2));\n        setStores(board.slice(2));\n      }).catch(error => console.error(\"Error fetching board data:\", error));\n    }).catch(error => console.error(\"There was a problem with your axios request:\", error));\n  };\n  const play = pitIndex => {\n    let stones = pits[pitIndex];\n    if (stones === 0 || currentPlayer !== Math.floor(pitIndex / 6)) return;\n    const newPits = [...pits];\n    newPits[pitIndex] = 0;\n    let currentIndex = pitIndex;\n    while (stones > 0) {\n      currentIndex = (currentIndex + 1) % 12;\n      newPits[currentIndex]++;\n      stones--;\n    }\n    if (newPits[currentIndex] === 1 && Math.floor(currentIndex / 6) === currentPlayer) {\n      const oppositeIndex = 11 - currentIndex;\n      const captured = newPits[oppositeIndex];\n      newPits[oppositeIndex] = 0;\n      const newStores = [...stores];\n      newStores[currentPlayer] += captured + 1;\n      newPits[currentIndex] = 0;\n      setStores(newStores);\n    }\n    setPits(newPits);\n    setCurrentPlayer(1 - currentPlayer);\n    makeMove(pitIndex); // Make API call after local move\n  };\n\n  //   return (\n  //     <div>\n  //       <h1>Welcome to Our Mancala Game, {name}!</h1>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           <div className=\"store\">{stores[1]}</div>\n  //           {pits.slice(6).map((stones, index) => (\n  //             <button\n  //               className=\"stones\"\n  //               key={index + 6}\n  //               onClick={() => play(index + 6)}\n  //             >\n  //               {stones}\n  //             </button>\n  //           ))}\n  //           <div className=\"store\">{stores[0]}</div>\n  //         </div>\n  //       </div>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {pits\n  //             .slice(0, 6)\n  //             .reverse()\n  //             .map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={5 - index}\n  //                 onClick={() => play(5 - index)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //         </div>\n  //       </div>\n  //       <h3>Your Score: {stores[1]}</h3>\n  //       <h3>Computer Score: {stores[0]}</h3>\n  //     </div>\n  //   );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to Our Mancala Game, \", name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Score: \", stores[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Computer Score: \", stores[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(MancalaBoard, \"mwCPMiC/E9S1xZAVyDYx9n78N8Q=\", false, function () {\n  return [useLocation];\n});\n_c = MancalaBoard;\nexport default MancalaBoard;\nvar _c;\n$RefreshReg$(_c, \"MancalaBoard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","jsxDEV","_jsxDEV","MancalaBoard","_s","pits","setPits","stores","setStores","currentPlayer","setCurrentPlayer","search","params","URLSearchParams","name","get","then","response","board","data","slice","catch","error","console","makeMove","pitIndex","moveData","player_num","start_index","post","message","log","play","stones","Math","floor","newPits","currentIndex","oppositeIndex","captured","newStores","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction MancalaBoard() {\n  const [pits, setPits] = useState([]);\n  const [stores, setStores] = useState([0, 0]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const { search } = useLocation();\n  const params = new URLSearchParams(search);\n  const name = params.get(\"name\");\n\n  useEffect(() => {\n    axios\n      .get(\"/get_board\")\n      .then((response) => {\n        const { board } = response.data;\n        setPits(board.slice(0, 2));\n        setStores(board.slice(2));\n      })\n      .catch((error) => console.error(\"Error fetching board data:\", error));\n  }, []);\n\n  const makeMove = (pitIndex) => {\n    const moveData = {\n      player_num: currentPlayer + 1,\n      start_index: pitIndex,\n    };\n\n    axios\n      .post(\"/make_move\", moveData)\n      .then((response) => {\n        const { message } = response.data;\n        console.log(message);\n        // Update the board after making the move\n        axios\n          .get(\"/get_board\")\n          .then((response) => {\n            const { board } = response.data;\n            setPits(board.slice(0, 2));\n            setStores(board.slice(2));\n          })\n          .catch((error) => console.error(\"Error fetching board data:\", error));\n      })\n      .catch((error) =>\n        console.error(\"There was a problem with your axios request:\", error)\n      );\n  };\n\n  const play = (pitIndex) => {\n    let stones = pits[pitIndex];\n    if (stones === 0 || currentPlayer !== Math.floor(pitIndex / 6)) return;\n\n    const newPits = [...pits];\n    newPits[pitIndex] = 0;\n\n    let currentIndex = pitIndex;\n    while (stones > 0) {\n      currentIndex = (currentIndex + 1) % 12;\n      newPits[currentIndex]++;\n      stones--;\n    }\n\n    if (\n      newPits[currentIndex] === 1 &&\n      Math.floor(currentIndex / 6) === currentPlayer\n    ) {\n      const oppositeIndex = 11 - currentIndex;\n      const captured = newPits[oppositeIndex];\n      newPits[oppositeIndex] = 0;\n      const newStores = [...stores];\n      newStores[currentPlayer] += captured + 1;\n      newPits[currentIndex] = 0;\n      setStores(newStores);\n    }\n\n    setPits(newPits);\n    setCurrentPlayer(1 - currentPlayer);\n    makeMove(pitIndex); // Make API call after local move\n  };\n\n  //   return (\n  //     <div>\n  //       <h1>Welcome to Our Mancala Game, {name}!</h1>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           <div className=\"store\">{stores[1]}</div>\n  //           {pits.slice(6).map((stones, index) => (\n  //             <button\n  //               className=\"stones\"\n  //               key={index + 6}\n  //               onClick={() => play(index + 6)}\n  //             >\n  //               {stones}\n  //             </button>\n  //           ))}\n  //           <div className=\"store\">{stores[0]}</div>\n  //         </div>\n  //       </div>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {pits\n  //             .slice(0, 6)\n  //             .reverse()\n  //             .map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={5 - index}\n  //                 onClick={() => play(5 - index)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //         </div>\n  //       </div>\n  //       <h3>Your Score: {stores[1]}</h3>\n  //       <h3>Computer Score: {stores[0]}</h3>\n  //     </div>\n  //   );\n  return (\n    <div>\n      <h1>Welcome to Our Mancala Game, {name}!</h1>\n      {/* Render the board */}\n      <div className=\"board\">{/* Render pits */}</div>\n      <h3>Your Score: {stores[1]}</h3>\n      <h3>Computer Score: {stores[0]}</h3>\n    </div>\n  );\n}\n\nexport default MancalaBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}