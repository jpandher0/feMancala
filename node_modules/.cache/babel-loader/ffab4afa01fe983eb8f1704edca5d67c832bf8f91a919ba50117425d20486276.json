{"ast":null,"code":"var _jsxFileName = \"/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MancalaBoard() {\n  _s();\n  const [computerPits, setComputerPits] = useState([4, 4, 4, 4, 4, 4]);\n  const [humanPits, setHumanPits] = useState([4, 4, 4, 4, 4, 4]);\n  const [computerStore, setComputerStore] = useState([0]);\n  const [humanStore, setHumanStore] = useState([0]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const {\n    search\n  } = useLocation();\n  const params = new URLSearchParams(search);\n  const name = params.get(\"name\");\n  const computerPlayer = params.get(\"computerPlayer\");\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/get_board\").then(response => {\n      const {\n        board\n      } = response.data;\n      setComputerPits(board[0]);\n      setHumanPits(board[2]);\n      setComputerStore(board[1]);\n      setHumanStore(board[3]);\n    }).catch(error => console.error(\"Error fetching board data:\", error));\n  }, []);\n  const makeMove = pitIndex => {\n    const moveData = {\n      player_num: currentPlayer + 1,\n      start_index: pitIndex\n    };\n    axios.post(\"http://localhost:8000/make_move\", moveData).then(response => {\n      const {\n        board,\n        earned_free_move\n      } = response.data;\n      // setPits(board.slice(0, 2));\n      // setStores(board.slice(2));\n      if (earned_free_move) {\n        console.log(\"Earned free move!\");\n      } else {\n        setCurrentPlayer(1 - currentPlayer);\n      }\n    }).catch(error => console.error(\"Error making move:\", error));\n  };\n  const play = pitIndex => {\n    let stones = computerPits[pitIndex]; //FIX_____________________________\n    // if (stones === 0 || currentPlayer !== Math.floor(pitIndex / 6)) return;\n\n    const newPits = computerPits.concat(humanPits);\n    newPits[pitIndex] = 0;\n    let currentIndex = pitIndex;\n    while (stones > 0) {\n      currentIndex = (currentIndex + 1) % 12;\n      newPits[currentIndex]++;\n      stones--;\n    }\n    if (newPits[currentIndex] === 1 && Math.floor(currentIndex / 6) === currentPlayer) {\n      const oppositeIndex = 11 - currentIndex;\n      const captured = newPits[oppositeIndex];\n      newPits[oppositeIndex] = 0;\n      const newStores = computerStore.concat(humanStore);\n      newStores[currentPlayer] += captured + 1;\n      newPits[currentIndex] = 0;\n      setComputerStore(newStores); //FIXXXXXXXXXXX________________________\n    }\n    setComputerPits(newPits); //FIXXXXXXXXXXX________________________\n    setCurrentPlayer(1 - currentPlayer);\n    makeMove(pitIndex); // Make API call after local move\n  };\n  //   console.log(computerPits);\n  //   console.log(humanPits);\n  //   return (\n  //     <div>\n  //       <h1>Welcome to Our Mancala Game, {name}!</h1>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           <div className=\"store\">{stores[1]}</div>\n  //           {pits.slice(6).map((stones, index) => (\n  //             <button\n  //               className=\"stones\"\n  //               key={index + 6}\n  //               onClick={() => play(index + 6)}\n  //             >\n  //               {stones}\n  //             </button>\n  //           ))}\n  //           <div className=\"store\">{stores[0]}</div>\n  //         </div>\n  //       </div>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {pits\n  //             .slice(0, 6)\n  //             .reverse()\n  //             .map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={5 - index}\n  //                 onClick={() => play(5 - index)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //         </div>\n  //       </div>\n  //       <h3>Your Score: {stores[1]}</h3>\n  //       <h3>Computer Score: {stores[0]}</h3>\n  //     </div>\n  //   );\n\n  //\n\n  //\n\n  //   return (\n  //     <div>\n  //       <h1>Welcome to Our Mancala Game, {name}!</h1>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {/* COMPUTER IS STORE1 */}\n  //           {/* <div className=\"store\">{computerStore}</div> */}\n  //           {/* COMPUTER IS PITS1 */}\n  //           {computerPits &&\n  //             computerPits.map((stones, index) => (\n  //               <div\n  //                 className=\"stones\"\n  //                 key={index + 6}\n  //                 //onClick={() => play(index + 6)}\n  //               >\n  //                 {stones}\n  //               </div>\n  //             ))}\n  //           {/* <div className=\"store\">{humanStore}</div> */}\n  //         </div>\n  //       </div>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {humanPits &&\n  //             humanPits.reverse().map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={5 - index}\n  //                 onClick={() => play(5 - index)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //         </div>\n  //       </div>\n  //       <h3>Your Score: {computerStore}</h3>\n  //       <h3>Computer Score: {humanStore}</h3>\n  //     </div>\n  //   );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"mancala-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"pits-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"pit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"pit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"stores-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"store-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"store-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"pits-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"pit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"pit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(MancalaBoard, \"nrvp90Q9WgzB2Ux3FR0rzKMJ84s=\", false, function () {\n  return [useLocation];\n});\n_c = MancalaBoard;\nexport default MancalaBoard;\nvar _c;\n$RefreshReg$(_c, \"MancalaBoard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","jsxDEV","_jsxDEV","MancalaBoard","_s","computerPits","setComputerPits","humanPits","setHumanPits","computerStore","setComputerStore","humanStore","setHumanStore","currentPlayer","setCurrentPlayer","search","params","URLSearchParams","name","get","computerPlayer","then","response","board","data","catch","error","console","makeMove","pitIndex","moveData","player_num","start_index","post","earned_free_move","log","play","stones","newPits","concat","currentIndex","Math","floor","oppositeIndex","captured","newStores","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction MancalaBoard() {\n  const [computerPits, setComputerPits] = useState([4, 4, 4, 4, 4, 4]);\n  const [humanPits, setHumanPits] = useState([4, 4, 4, 4, 4, 4]);\n  const [computerStore, setComputerStore] = useState([0]);\n  const [humanStore, setHumanStore] = useState([0]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const { search } = useLocation();\n  const params = new URLSearchParams(search);\n  const name = params.get(\"name\");\n  const computerPlayer = params.get(\"computerPlayer\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/get_board\")\n      .then((response) => {\n        const { board } = response.data;\n        setComputerPits(board[0]);\n        setHumanPits(board[2]);\n        setComputerStore(board[1]);\n        setHumanStore(board[3]);\n      })\n      .catch((error) => console.error(\"Error fetching board data:\", error));\n  }, []);\n\n  const makeMove = (pitIndex) => {\n    const moveData = {\n      player_num: currentPlayer + 1,\n      start_index: pitIndex,\n    };\n\n    axios\n      .post(\"http://localhost:8000/make_move\", moveData)\n      .then((response) => {\n        const { board, earned_free_move } = response.data;\n        // setPits(board.slice(0, 2));\n        // setStores(board.slice(2));\n        if (earned_free_move) {\n          console.log(\"Earned free move!\");\n        } else {\n          setCurrentPlayer(1 - currentPlayer);\n        }\n      })\n      .catch((error) => console.error(\"Error making move:\", error));\n  };\n\n  const play = (pitIndex) => {\n    let stones = computerPits[pitIndex]; //FIX_____________________________\n    // if (stones === 0 || currentPlayer !== Math.floor(pitIndex / 6)) return;\n\n    const newPits = computerPits.concat(humanPits);\n    newPits[pitIndex] = 0;\n\n    let currentIndex = pitIndex;\n    while (stones > 0) {\n      currentIndex = (currentIndex + 1) % 12;\n      newPits[currentIndex]++;\n      stones--;\n    }\n\n    if (\n      newPits[currentIndex] === 1 &&\n      Math.floor(currentIndex / 6) === currentPlayer\n    ) {\n      const oppositeIndex = 11 - currentIndex;\n      const captured = newPits[oppositeIndex];\n      newPits[oppositeIndex] = 0;\n      const newStores = computerStore.concat(humanStore);\n      newStores[currentPlayer] += captured + 1;\n      newPits[currentIndex] = 0;\n      setComputerStore(newStores); //FIXXXXXXXXXXX________________________\n    }\n\n    setComputerPits(newPits); //FIXXXXXXXXXXX________________________\n    setCurrentPlayer(1 - currentPlayer);\n    makeMove(pitIndex); // Make API call after local move\n  };\n  //   console.log(computerPits);\n  //   console.log(humanPits);\n  //   return (\n  //     <div>\n  //       <h1>Welcome to Our Mancala Game, {name}!</h1>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           <div className=\"store\">{stores[1]}</div>\n  //           {pits.slice(6).map((stones, index) => (\n  //             <button\n  //               className=\"stones\"\n  //               key={index + 6}\n  //               onClick={() => play(index + 6)}\n  //             >\n  //               {stones}\n  //             </button>\n  //           ))}\n  //           <div className=\"store\">{stores[0]}</div>\n  //         </div>\n  //       </div>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {pits\n  //             .slice(0, 6)\n  //             .reverse()\n  //             .map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={5 - index}\n  //                 onClick={() => play(5 - index)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //         </div>\n  //       </div>\n  //       <h3>Your Score: {stores[1]}</h3>\n  //       <h3>Computer Score: {stores[0]}</h3>\n  //     </div>\n  //   );\n\n  //\n\n  //\n\n  //   return (\n  //     <div>\n  //       <h1>Welcome to Our Mancala Game, {name}!</h1>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {/* COMPUTER IS STORE1 */}\n  //           {/* <div className=\"store\">{computerStore}</div> */}\n  //           {/* COMPUTER IS PITS1 */}\n  //           {computerPits &&\n  //             computerPits.map((stones, index) => (\n  //               <div\n  //                 className=\"stones\"\n  //                 key={index + 6}\n  //                 //onClick={() => play(index + 6)}\n  //               >\n  //                 {stones}\n  //               </div>\n  //             ))}\n  //           {/* <div className=\"store\">{humanStore}</div> */}\n  //         </div>\n  //       </div>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {humanPits &&\n  //             humanPits.reverse().map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={5 - index}\n  //                 onClick={() => play(5 - index)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //         </div>\n  //       </div>\n  //       <h3>Your Score: {computerStore}</h3>\n  //       <h3>Computer Score: {humanStore}</h3>\n  //     </div>\n  //   );\n  return (\n    <div class=\"mancala-board\">\n      <div class=\"pits-row\">\n        {/* <!-- First 6 pits --> */}\n        <div class=\"pit\"></div>\n        <div class=\"pit\"></div>\n        {/* <!-- Add the remaining pits as needed --> */}\n      </div>\n      <div class=\"stores-row\">\n        <div class=\"store-left\"></div>\n        <div class=\"store-right\"></div>\n      </div>\n      <div class=\"pits-row\">\n        {/* <!-- Next 6 pits --> */}\n        <div class=\"pit\"></div>\n        <div class=\"pit\"></div>\n        {/* <!-- Add the remaining pits as needed --> */}\n      </div>\n    </div>\n  );\n}\n\nexport default MancalaBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}