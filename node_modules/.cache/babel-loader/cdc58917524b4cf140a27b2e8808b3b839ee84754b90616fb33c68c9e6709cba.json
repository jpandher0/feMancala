{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useLocation,useNavigate}from\"react-router-dom\";import\"./App.css\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MancalaBoard(){const[computerPits,setComputerPits]=useState([4,4,4,4,4,4]);const[humanPits,setHumanPits]=useState([4,4,4,4,4,4]);const[computerStore,setComputerStore]=useState([0]);const[humanStore,setHumanStore]=useState([0]);const[currentPlayer,setCurrentPlayer]=useState(0);const[isComputersTurn,setIsComputersTurn]=useState(false);const[gameOver,setGameOver]=useState(false);const[earnedFreeMove,setEarnedFreeMove]=useState(false);const[earnedCapture,setEarnedCapture]=useState(false);const{search}=useLocation();const params=new URLSearchParams(search);const name=params.get(\"name\");const computerPlayer=params.get(\"computerPlayer\");const navigate=useNavigate();const winLoss=()=>{navigate(\"/winLoss?computerScore=\".concat(computerStore,\"&humanScore=\").concat(humanStore));};useEffect(()=>{if(currentPlayer===1){setIsComputersTurn(true);setTimeout(()=>{makeComputerMove();},5000);}},[currentPlayer]);useEffect(()=>{if(currentPlayer===1&&earnedFreeMove){makeComputerMove();}},[currentPlayer,earnedFreeMove]);useEffect(()=>{if(gameOver){console.log(\"isgameover\");console.log(computerStore);console.log(humanStore);winLoss();}},[gameOver]);const makeComputerMove=()=>{if(computerPlayer===\"AI\"){makeMove(100);}else{makeMove(10);}setIsComputersTurn(false);};const makeMove=pitIndex=>{const moveData={player_num:currentPlayer,start_index:pitIndex,curr_board:[computerPits,computerStore,humanPits,humanStore]};console.log(moveData);axios.post(\"http://localhost:8000/make_move\",moveData).then(response=>{console.log(response);const{board,earned_free_move,earned_capture,is_game_over}=response.data;setComputerPits(board[0]);setHumanPits(board[2]);setComputerStore(board[1]);setHumanStore(board[3]);setEarnedFreeMove(earned_free_move);setEarnedCapture(earned_capture);setGameOver(is_game_over);if(!earned_free_move){setCurrentPlayer(1-currentPlayer);}}).catch(error=>console.error(\"Error making move:\",error));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Welcome to Our Mancala Game, \",name,\"!\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"mancala-board\",children:[isComputersTurn&&/*#__PURE__*/_jsx(\"div\",{children:\"Computer's Turn...\"}),\" \",earnedFreeMove&&/*#__PURE__*/_jsx(\"div\",{children:\"Earned a free move!\"}),earnedCapture&&/*#__PURE__*/_jsx(\"div\",{children:\"Earned capture!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"pits-row\",children:computerPits&&[...computerPits].reverse().map((stones,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"pit\",children:/*#__PURE__*/_jsx(\"div\",{className:\"stones\",children:stones})},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"stores-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"store-left\",children:/*#__PURE__*/_jsx(\"div\",{className:\"store-value\",children:computerStore})}),/*#__PURE__*/_jsx(\"div\",{className:\"store-right\",children:/*#__PURE__*/_jsx(\"div\",{className:\"store-value\",children:humanStore})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pits-row\",children:humanPits&&humanPits.map((stones,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"pit\",onClick:()=>!isComputersTurn&&makeMove(index),disabled:isComputersTurn||stones===0,children:/*#__PURE__*/_jsx(\"div\",{className:\"stones\",children:stones})},index))})]})]});}export default MancalaBoard;","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","MancalaBoard","computerPits","setComputerPits","humanPits","setHumanPits","computerStore","setComputerStore","humanStore","setHumanStore","currentPlayer","setCurrentPlayer","isComputersTurn","setIsComputersTurn","gameOver","setGameOver","earnedFreeMove","setEarnedFreeMove","earnedCapture","setEarnedCapture","search","params","URLSearchParams","name","get","computerPlayer","navigate","winLoss","concat","setTimeout","makeComputerMove","console","log","makeMove","pitIndex","moveData","player_num","start_index","curr_board","post","then","response","board","earned_free_move","earned_capture","is_game_over","data","catch","error","children","className","reverse","map","stones","index","onClick","disabled"],"sources":["/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction MancalaBoard() {\n  const [computerPits, setComputerPits] = useState([4, 4, 4, 4, 4, 4]);\n  const [humanPits, setHumanPits] = useState([4, 4, 4, 4, 4, 4]);\n  const [computerStore, setComputerStore] = useState([0]);\n  const [humanStore, setHumanStore] = useState([0]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [isComputersTurn, setIsComputersTurn] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [earnedFreeMove, setEarnedFreeMove] = useState(false);\n  const [earnedCapture, setEarnedCapture] = useState(false);\n  const { search } = useLocation();\n  const params = new URLSearchParams(search);\n  const name = params.get(\"name\");\n  const computerPlayer = params.get(\"computerPlayer\");\n  const navigate = useNavigate();\n\n  const winLoss = () => {\n    navigate(\n      `/winLoss?computerScore=${computerStore}&humanScore=${humanStore}`\n    );\n  };\n\n  useEffect(() => {\n    if (currentPlayer === 1) {\n      setIsComputersTurn(true);\n      setTimeout(() => {\n        makeComputerMove();\n      }, 5000);\n    }\n  }, [currentPlayer]);\n\n  useEffect(() => {\n    if (currentPlayer === 1 && earnedFreeMove) {\n      makeComputerMove();\n    }\n  }, [currentPlayer, earnedFreeMove]);\n\n  useEffect(() => {\n    if (gameOver) {\n      console.log(\"isgameover\");\n      console.log(computerStore);\n      console.log(humanStore);\n      winLoss();\n    }\n  }, [gameOver]);\n\n  const makeComputerMove = () => {\n    if (computerPlayer === \"AI\") {\n      makeMove(100);\n    } else {\n      makeMove(10);\n    }\n    setIsComputersTurn(false);\n  };\n\n  const makeMove = (pitIndex) => {\n    const moveData = {\n      player_num: currentPlayer,\n      start_index: pitIndex,\n      curr_board: [computerPits, computerStore, humanPits, humanStore],\n    };\n    console.log(moveData);\n    axios\n      .post(\"http://localhost:8000/make_move\", moveData)\n      .then((response) => {\n        console.log(response);\n        const { board, earned_free_move, earned_capture, is_game_over } =\n          response.data;\n        setComputerPits(board[0]);\n        setHumanPits(board[2]);\n        setComputerStore(board[1]);\n        setHumanStore(board[3]);\n        setEarnedFreeMove(earned_free_move);\n        setEarnedCapture(earned_capture);\n        setGameOver(is_game_over);\n        if (!earned_free_move) {\n          setCurrentPlayer(1 - currentPlayer);\n        }\n      })\n      .catch((error) => console.error(\"Error making move:\", error));\n  };\n\n  return (\n    <div>\n      <br></br>\n      <h1>Welcome to Our Mancala Game, {name}!</h1>\n      <br></br>\n      <br></br>\n      <div className=\"mancala-board\">\n        {isComputersTurn && <div>Computer's Turn...</div>}{\" \"}\n        {earnedFreeMove && <div>Earned a free move!</div>}\n        {earnedCapture && <div>Earned capture!</div>}\n        <div className=\"pits-row\">\n          {computerPits &&\n            [...computerPits].reverse().map((stones, index) => (\n              <div className=\"pit\" key={index}>\n                <div className=\"stones\">{stones}</div>\n              </div>\n            ))}\n        </div>\n        <div className=\"stores-row\">\n          <div className=\"store-left\">\n            <div className=\"store-value\">{computerStore}</div>\n          </div>\n          <div className=\"store-right\">\n            <div className=\"store-value\">{humanStore}</div>\n          </div>\n        </div>\n        <div className=\"pits-row\">\n          {humanPits &&\n            humanPits.map((stones, index) => (\n              <button\n                className=\"pit\"\n                key={index}\n                onClick={() => !isComputersTurn && makeMove(index)}\n                disabled={isComputersTurn || stones === 0}\n              >\n                <div className=\"stones\">{stones}</div>\n              </button>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MancalaBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}