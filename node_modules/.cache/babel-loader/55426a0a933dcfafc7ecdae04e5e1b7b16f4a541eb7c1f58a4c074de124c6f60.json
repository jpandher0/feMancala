{"ast":null,"code":"var _jsxFileName = \"/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MancalaBoard() {\n  _s();\n  const [pits1, setPits1] = useState([4, 4, 4, 4, 4, 4]);\n  const [pits2, setPits2] = useState([4, 4, 4, 4, 4, 4]);\n  const [stores1, setStores1] = useState([0]);\n  const [stores2, setStores2] = useState([0]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const {\n    search\n  } = useLocation();\n  const params = new URLSearchParams(search);\n  const name = params.get(\"name\");\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/get_board\").then(response => {\n      const {\n        board\n      } = response.data;\n      // Split the board into player pits and stores\n      const player1Pits = board.slice(0, 5);\n      const player2Pits = board.slice(7, 12); // Adjusted slicing indices\n      const player1Store = board[6];\n      const player2Store = board[13]; // Adjusted slicing indices\n      setPits1(player1Pits);\n      setPits2(player2Pits);\n      setStores1(player1Store);\n      setStores2(player2Store);\n    }).catch(error => console.error(\"Error fetching board data:\", error));\n  }, []);\n  const makeMove = pitIndex => {\n    const moveData = {\n      player_num: currentPlayer + 1,\n      start_index: pitIndex\n    };\n    axios.post(\"http://localhost:8000/make_move\", moveData).then(response => {\n      const {\n        board,\n        earned_free_move\n      } = response.data;\n      // setPits(board.slice(0, 2));\n      // setStores(board.slice(2));\n      if (earned_free_move) {\n        console.log(\"Earned free move!\");\n      } else {\n        setCurrentPlayer(1 - currentPlayer);\n      }\n    }).catch(error => console.error(\"Error making move:\", error));\n  };\n  const play = pitIndex => {\n    let stones = pits1[pitIndex]; //FIX_____________________________\n    // if (stones === 0 || currentPlayer !== Math.floor(pitIndex / 6)) return;\n\n    const newPits = pits1.concat(pits2);\n    newPits[pitIndex] = 0;\n    let currentIndex = pitIndex;\n    while (stones > 0) {\n      currentIndex = (currentIndex + 1) % 12;\n      newPits[currentIndex]++;\n      stones--;\n    }\n    if (newPits[currentIndex] === 1 && Math.floor(currentIndex / 6) === currentPlayer) {\n      const oppositeIndex = 11 - currentIndex;\n      const captured = newPits[oppositeIndex];\n      newPits[oppositeIndex] = 0;\n      const newStores = stores1.concat(stores2);\n      newStores[currentPlayer] += captured + 1;\n      newPits[currentIndex] = 0;\n      setStores1(newStores); //FIXXXXXXXXXXX________________________\n    }\n    setPits1(newPits); //FIXXXXXXXXXXX________________________\n    setCurrentPlayer(1 - currentPlayer);\n    makeMove(pitIndex); // Make API call after local move\n  };\n  console.log(pits1);\n  console.log(pits2);\n  //   return (\n  //     <div>\n  //       <h1>Welcome to Our Mancala Game, {name}!</h1>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           <div className=\"store\">{stores[1]}</div>\n  //           {pits.slice(6).map((stones, index) => (\n  //             <button\n  //               className=\"stones\"\n  //               key={index + 6}\n  //               onClick={() => play(index + 6)}\n  //             >\n  //               {stones}\n  //             </button>\n  //           ))}\n  //           <div className=\"store\">{stores[0]}</div>\n  //         </div>\n  //       </div>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {pits\n  //             .slice(0, 6)\n  //             .reverse()\n  //             .map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={5 - index}\n  //                 onClick={() => play(5 - index)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //         </div>\n  //       </div>\n  //       <h3>Your Score: {stores[1]}</h3>\n  //       <h3>Computer Score: {stores[0]}</h3>\n  //     </div>\n  //   );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to Our Mancala Game, \", name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pits\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"store\",\n          children: stores1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), pits1 && pits1.map((stones, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stones\",\n          onClick: () => play(index + 6),\n          children: stones\n        }, index + 6, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"store\",\n          children: stores2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pits\",\n        children: pits2 && pits2.reverse().map((stones, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stones\",\n          onClick: () => play(5 - index),\n          children: stones\n        }, 5 - index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Score: \", stores1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Computer Score: \", stores2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(MancalaBoard, \"t+hLneRIH6DkxxDnL7lGvfoPUzI=\", false, function () {\n  return [useLocation];\n});\n_c = MancalaBoard;\nexport default MancalaBoard;\nvar _c;\n$RefreshReg$(_c, \"MancalaBoard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","jsxDEV","_jsxDEV","MancalaBoard","_s","pits1","setPits1","pits2","setPits2","stores1","setStores1","stores2","setStores2","currentPlayer","setCurrentPlayer","search","params","URLSearchParams","name","get","then","response","board","data","player1Pits","slice","player2Pits","player1Store","player2Store","catch","error","console","makeMove","pitIndex","moveData","player_num","start_index","post","earned_free_move","log","play","stones","newPits","concat","currentIndex","Math","floor","oppositeIndex","captured","newStores","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","onClick","reverse","_c","$RefreshReg$"],"sources":["/Users/jasanpreet/Desktop/COSC625/COSC-625-Team-Global/mancala-frontend/src/Mancala.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction MancalaBoard() {\n  const [pits1, setPits1] = useState([4, 4, 4, 4, 4, 4]);\n  const [pits2, setPits2] = useState([4, 4, 4, 4, 4, 4]);\n  const [stores1, setStores1] = useState([0]);\n  const [stores2, setStores2] = useState([0]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const { search } = useLocation();\n  const params = new URLSearchParams(search);\n  const name = params.get(\"name\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/get_board\")\n      .then((response) => {\n        const { board } = response.data;\n        // Split the board into player pits and stores\n        const player1Pits = board.slice(0, 5);\n        const player2Pits = board.slice(7, 12); // Adjusted slicing indices\n        const player1Store = board[6];\n        const player2Store = board[13]; // Adjusted slicing indices\n        setPits1(player1Pits);\n        setPits2(player2Pits);\n        setStores1(player1Store);\n        setStores2(player2Store);\n      })\n      .catch((error) => console.error(\"Error fetching board data:\", error));\n  }, []);\n\n  const makeMove = (pitIndex) => {\n    const moveData = {\n      player_num: currentPlayer + 1,\n      start_index: pitIndex,\n    };\n\n    axios\n      .post(\"http://localhost:8000/make_move\", moveData)\n      .then((response) => {\n        const { board, earned_free_move } = response.data;\n        // setPits(board.slice(0, 2));\n        // setStores(board.slice(2));\n        if (earned_free_move) {\n          console.log(\"Earned free move!\");\n        } else {\n          setCurrentPlayer(1 - currentPlayer);\n        }\n      })\n      .catch((error) => console.error(\"Error making move:\", error));\n  };\n\n  const play = (pitIndex) => {\n    let stones = pits1[pitIndex]; //FIX_____________________________\n    // if (stones === 0 || currentPlayer !== Math.floor(pitIndex / 6)) return;\n\n    const newPits = pits1.concat(pits2);\n    newPits[pitIndex] = 0;\n\n    let currentIndex = pitIndex;\n    while (stones > 0) {\n      currentIndex = (currentIndex + 1) % 12;\n      newPits[currentIndex]++;\n      stones--;\n    }\n\n    if (\n      newPits[currentIndex] === 1 &&\n      Math.floor(currentIndex / 6) === currentPlayer\n    ) {\n      const oppositeIndex = 11 - currentIndex;\n      const captured = newPits[oppositeIndex];\n      newPits[oppositeIndex] = 0;\n      const newStores = stores1.concat(stores2);\n      newStores[currentPlayer] += captured + 1;\n      newPits[currentIndex] = 0;\n      setStores1(newStores); //FIXXXXXXXXXXX________________________\n    }\n\n    setPits1(newPits); //FIXXXXXXXXXXX________________________\n    setCurrentPlayer(1 - currentPlayer);\n    makeMove(pitIndex); // Make API call after local move\n  };\n  console.log(pits1);\n  console.log(pits2);\n  //   return (\n  //     <div>\n  //       <h1>Welcome to Our Mancala Game, {name}!</h1>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           <div className=\"store\">{stores[1]}</div>\n  //           {pits.slice(6).map((stones, index) => (\n  //             <button\n  //               className=\"stones\"\n  //               key={index + 6}\n  //               onClick={() => play(index + 6)}\n  //             >\n  //               {stones}\n  //             </button>\n  //           ))}\n  //           <div className=\"store\">{stores[0]}</div>\n  //         </div>\n  //       </div>\n  //       <div className=\"board\">\n  //         <div className=\"pits\">\n  //           {pits\n  //             .slice(0, 6)\n  //             .reverse()\n  //             .map((stones, index) => (\n  //               <button\n  //                 className=\"stones\"\n  //                 key={5 - index}\n  //                 onClick={() => play(5 - index)}\n  //               >\n  //                 {stones}\n  //               </button>\n  //             ))}\n  //         </div>\n  //       </div>\n  //       <h3>Your Score: {stores[1]}</h3>\n  //       <h3>Computer Score: {stores[0]}</h3>\n  //     </div>\n  //   );\n  return (\n    <div>\n      <h1>Welcome to Our Mancala Game, {name}!</h1>\n      <div className=\"board\">\n        <div className=\"pits\">\n          <div className=\"store\">{stores1}</div>\n          {pits1 &&\n            pits1.map((stones, index) => (\n              <button\n                className=\"stones\"\n                key={index + 6}\n                onClick={() => play(index + 6)}\n              >\n                {stones}\n              </button>\n            ))}\n          <div className=\"store\">{stores2}</div>\n        </div>\n      </div>\n      <div className=\"board\">\n        <div className=\"pits\">\n          {pits2 &&\n            pits2.reverse().map((stones, index) => (\n              <button\n                className=\"stones\"\n                key={5 - index}\n                onClick={() => play(5 - index)}\n              >\n                {stones}\n              </button>\n            ))}\n        </div>\n      </div>\n      <h3>Your Score: {stores1}</h3>\n      <h3>Computer Score: {stores2}</h3>\n    </div>\n  );\n}\n\nexport default MancalaBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}